package com.practice.bankingServices;

public class BankingServices {
	
	private final Object obj = new Object();
	
	public void transfer(Account from, Account to, long amt) {
		System.out.println("Into transfer method");
		System.out.println("Attempt to acquire lock by thread: " + Thread.currentThread().getName());
		synchronized (obj) {
			try {
				System.out.println("Acquired lock by thread: " + Thread.currentThread().getName());
				Thread.sleep(2000);
				if(from.getBalance() >= amt) {
					from.withdraw(amt);
					to.deposit(amt);
					System.out.println("Account balance in from " + from.getAccountId() + " account: " + from.getBalance());
					System.out.println("Account balance in to " + to.getAccountId() + " account: " + to.getBalance());
					System.out.println("Get sum of balance of all accounts: " + Transact.getSumOfBalancesOfAllAccounts());
				} else {
					System.out.println("Not enough balance to transfer.");
					return;
				}
			} catch(Exception e) {
				e.printStackTrace();
			} finally {
				System.out.println("-------------------------------------------------------------");
			}
		}
	}

}
